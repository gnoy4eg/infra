---
- name: vault - create namespace
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ vault_namespace }}"
    state: present

- name: vault - wait for pod Ready condition (initialized and unsealed)
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Pod
      metadata:
        name: "{{ vault_pod }}"
        namespace: "{{ vault_namespace }}"
    wait: yes
    wait_condition:
      type: Ready
      status: True
    wait_timeout: 1200
  register: _vault_pod_condition
  until: _vault_pod_condition is not failed
  retries: 120
  delay: 10

- block:
    - name: vault - get token from k8s secret
      set_fact:
        _vault_token_query: "{{ query('kubernetes.core.k8s', kind='Secret', namespace=vault_namespace, resource_name=vault_token_k8s_secret.name) }}"

    - name: vault - set token as fact
      set_fact:
        vault_token: "{{ _vault_token_query[0].data[vault_token_k8s_secret.key] | b64decode }}"
  no_log: true
  when: not vault_token

- name: vault - put secrets
  kubernetes.core.k8s_exec:
    namespace: "{{ vault_namespace }}"
    pod: "{{ vault_pod }}"
    command: >
      sh -c 'VAULT_TOKEN={{ vault_token }} vault kv put -format=json \
      {{ item.path }} {{ item.name }}={{ item.value }}'
  no_log: true
  loop: "{{ vault_secrets }}"
