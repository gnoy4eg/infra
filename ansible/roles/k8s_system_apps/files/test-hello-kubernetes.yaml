---
apiVersion: v1
kind: Namespace
metadata:
  name: hello-kubernetes
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: hello-kubernetes-pvc
  namespace: hello-kubernetes
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
  storageClassName: longhorn
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-kubernetes
  namespace: hello-kubernetes
  labels:
    app.kubernetes.io/name: hello-kubernetes
    app.kubernetes.io/instance: hello-kubernetes
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: hello-kubernetes
      app.kubernetes.io/instance: hello-kubernetes
  template:
    metadata:
      labels:
        app.kubernetes.io/name: hello-kubernetes
        app.kubernetes.io/instance: hello-kubernetes
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: hello-kubernetes
        image: paulbouwer/hello-kubernetes:1.10
        ports:
        - name: http
          containerPort: 8080
        env:
        - name: MESSAGE
          value: "hello-kubernetes.home.devmem.ru"
        - name: HANDLER_PATH_PREFIX
          value: "hello-kubernetes"
        - name: RENDER_PATH_PREFIX
          value: "hello-kubernetes"
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUBERNETES_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: test-volume
          mountPath: /usr/src/app/volume
        resources:
          requests:
            memory: 90Mi
            cpu: 100m
          limits:
            memory: 200Mi
            cpu: 250m
      volumes:
      - name: test-volume
        persistentVolumeClaim:
          claimName: hello-kubernetes-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: hello-kubernetes
  namespace: hello-kubernetes
  labels:
    app.kubernetes.io/name: hello-kubernetes
    app.kubernetes.io/instance: hello-kubernetes
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: hello-kubernetes
    app.kubernetes.io/instance: hello-kubernetes
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hello-kubernetes
  namespace: hello-kubernetes
  labels:
    app.kubernetes.io/name: hello-kubernetes
    app.kubernetes.io/instance: hello-kubernetes
spec:
  rules:
  # - host: hello-kubernetes.home.devmem.ru
  - http:
      paths:
      - path: /hello-kubernetes
        pathType: Prefix
        backend:
          service:
            name: hello-kubernetes
            port:
              number: 8080
  ingressClassName: nginx
