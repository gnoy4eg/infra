argo-cd:
  repoServer:
    volumeMounts:
    - name: custom-tools
      mountPath: /usr/local/bin/argocd-lovely-plugin
      subPath: argocd-lovely-plugin
    volumes:
    - name: custom-tools
      emptyDir: {}
    initContainers:
    - name: argocd-lovely-plugin-download
      image: ghcr.io/crumbhole/argocd-lovely-plugin:latest
      imagePullPolicy: Always
      volumeMounts:
      - mountPath: /custom-tools
        name: custom-tools
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
  server:
    config:
      url: https://argocd.k8s.devmem.ru
      configManagementPlugins: |-
        - name: argocd-lovely-plugin
          generate:
            command: ["argocd-lovely-plugin"]
      statusbadge.enabled: "true"
      resource.customizations.health.argoproj.io_Application: |
        hs = {}
        hs.status = "Progressing"
        hs.message = ""
        if obj.status ~= nil then
          if obj.status.health ~= nil then
            hs.status = obj.status.health.status
            if obj.status.health.message ~= nil then
              hs.message = obj.status.health.message
            end
          end
        end
        return hs
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        nginx.ingress.kubernetes.io/ssl-passthrough: "true"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      ingressClassName: nginx
      https: true
      hosts:
      - argocd.k8s.devmem.ru
      tls:
      - hosts:
        - argocd.k8s.devmem.ru
        secretName: argocd-server-tls
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
  controller:
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
  applicationSet:
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
  dex:
    enabled: false
