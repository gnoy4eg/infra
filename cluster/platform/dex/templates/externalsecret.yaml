apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: dex
  labels:
{{ include "dex.labels" . | indent 4 }}
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: vault-backend
  target:
    template:
      metadata:
        labels:
{{ include "dex.labels" . | indent 10 }}
      data:
        config.yaml: |
          issuer: https://dex.devmem.ru
          storage:
            type: kubernetes
            config:
              inCluster: true
          oauth2:
            skipApprovalScreen: true
          connectors:
            - type: ldap
              id: ldap
              name: FreeIPA
              config:
                host: "{{ `{{ .host }}:{{ .port }}` }}"
                insecureSkipVerify: true
                startTLS: true
                bindDN: "{{ `{{ .bindDn }}` }}"
                bindPW: "{{ `{{ .bindPassword }}` }}"
                userSearch:
                  baseDN: "{{ `{{ .usersDns }}` }}"
                  filter: "(&(objectclass=inetorgperson)(memberof=cn=dex_users,cn=groups,cn=accounts,dc=home,dc=devmem,dc=ru))"
                  username: uid
                  idAttr: DN
                  emailAttr: mail
                  nameAttr: cn
                groupSearch:
                  baseDN: "{{ `{{ .groupsDns }}` }}"
                  filter: "(objectClass=groupofnames)"
                  userMatchers:
                    - userAttr: DN
                      groupAttr: member
                  nameAttr: cn
          staticClients:
            - name: Argo CD
              id: argocd
              secret: "{{ `{{ .argocdClientSecret }}` }}"
              redirectURIs:
                - https://argocd.k8s.devmem.ru/auth/callback
  data:
    - secretKey: host
      remoteRef:
        key: secret/common/ldap
        property: host
    - secretKey: port
      remoteRef:
        key: secret/common/ldap
        property: port
    - secretKey: usersDns
      remoteRef:
        key: secret/common/ldap
        property: users-dn
    - secretKey: groupsDns
      remoteRef:
        key: secret/common/ldap
        property: groups-dn
    - secretKey: bindDn
      remoteRef:
        key: secret/dex
        property: ldap-bind-dn
    - secretKey: bindPassword
      remoteRef:
        key: secret/dex
        property: ldap-bind-password
    - secretKey: argocdClientSecret
      remoteRef:
        key: secret/dex
        property: argocd-client-secret
